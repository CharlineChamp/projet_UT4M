levels = c("< 2 ans" , "Entre 2 et 5 ans",
"Entre 5 et 10 ans", "> 10 ans"))
data_cat$time_proportion_other_practice <- ordered(data_cat$time_proportion_other_practice,
levels = c("< 20%", "Entre 20% et 50%",
"> 50%"))
data_cat$coach_for_trail <- ordered(data_cat$coach_for_trail,
levels = c("Oui", "Non"))
data_cat$heart_rate_monitor_train <- ordered(data_cat$heart_rate_monitor_train,
levels = c("Oui", "Non"))
data_cat$heart_rate_monitor_competition <- ordered(data_cat$heart_rate_monitor_competition,
levels = c("Oui", "Non"))
data_cat$connected_platform <- ordered(data_cat$connected_platform,
levels = c("Oui", "Non"))
data_cat$ITRA_rating_know <- ordered(data_cat$ITRA_rating_know,
levels = c("Oui", "Non"))
data_cat$number_hours_practice_trail_phase_preparation = ordered(data_cat$number_hours_practice_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
data_cat$drop_practice_trail_phase_preparation = ordered(data_cat$drop_practice_trail_phase_preparation,
levels=c('< 1000m / semaine',
'Entre 1000m et 2000m / semaine',
'> 2000m / semaine'))
data_cat$kilometres_practice_trail_phase_preparation = ordered(data_cat$kilometres_practice_trail_phase_preparation,
levels=c('< 20km / semaine',
'Entre 20km et 50km / semaine',
'Entre 50km et 80km / semaine',
'> 80km / semaine'))
data_cat$number_hours_training_trail_phase_preparation = ordered(data_cat$number_hours_training_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
data_cat$trail_participation_last_two_seasons <- ordered(data_cat$trail_participation_last_two_seasons,
levels = c("Oui", "Non"))
data_cat$distance_trail_participation_last_two_seasons=ordered(data_cat$distance_trail_participation_last_two_seasons,
levels=c("< 40km", "De 40km à 80km", "> 80km"))
data_cat$frequence_trail_participation_last_two_seasons_by_season=ordered(data_cat$frequence_trail_participation_last_two_seasons_by_season,
levels=c("1 à 3 courses / saison",
"4 à 8 courses / saison",
"> 8 courses / saison"))
levels(data_cat$which_races_UT4M_2023 )
levels(data_cat$volume_drink_during_training )
df <- read_excel("~/Documents/GitHub/UT4M_psycho/Data/dataset_V5.xlsx")
levels(data_cat$fre )
# Fonction pour séparer les choix multiples
choix_multiples = function(data, choix, nom_colonne, colonne){
matrice = matrix(nrow = dim(data)[1],ncol = length(choix))
df = as.data.frame(matrice)
for (j in 1 :length(choix)){
vecteur = c()
for (i in 1 : length(colonne)){
if(is.na(colonne[i])==FALSE){
if(str_detect(colonne[i],choix[j])==TRUE){
vecteur = c(vecteur,0)
}
else{ vecteur = c(vecteur,1)}
}
else{vecteur = c(vecteur,1)}
}
df[j]=vecteur
}
colnames(df) = nom_colonne
return(df)
}
# Suppression du numéro de dossier, de la taille,colonnes à choix multiples
data = df[-c(1,7,10,11,28,29,31,33,35,38,39,43,44)]
# Suppression des dernières colonnes
data = data[-c(53:58)]
# Séparation des données catégorielles et continues
data_cat <- data[,-c(2:5,14,33:52)]
data_cont <- data[,c(2:5,14,33:52)]
# Redéfinition des types de données
for(ncol in 1:length(data_cat)){
data_cat[[ncol]] <- as.factor(data_cat[[ncol]])
}
# Réordonnancement des levels
data_cat$weekly_volume_profession <- ordered(data_cat$weekly_volume_profession,
levels = c("⩽ 35 heures / semaine" ,
"entre 36 et 45 heures / semaine",
"⩾ 45h / semaine" ))
data_cat$start_trail <- ordered(data_cat$start_trail,
levels = c("< 2 ans" , "Entre 2 et 5 ans",
"Entre 5 et 10 ans", "> 10 ans"))
data_cat$time_proportion_other_practice <- ordered(data_cat$time_proportion_other_practice,
levels = c("< 20%", "Entre 20% et 50%",
"> 50%"))
data_cat$coach_for_trail <- ordered(data_cat$coach_for_trail,
levels = c("Oui", "Non"))
data_cat$heart_rate_monitor_train <- ordered(data_cat$heart_rate_monitor_train,
levels = c("Oui", "Non"))
data_cat$heart_rate_monitor_competition <- ordered(data_cat$heart_rate_monitor_competition,
levels = c("Oui", "Non"))
data_cat$connected_platform <- ordered(data_cat$connected_platform,
levels = c("Oui", "Non"))
data_cat$ITRA_rating_know <- ordered(data_cat$ITRA_rating_know,
levels = c("Oui", "Non"))
data_cat$number_hours_practice_trail_phase_preparation = ordered(data_cat$number_hours_practice_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
data_cat$drop_practice_trail_phase_preparation = ordered(data_cat$drop_practice_trail_phase_preparation,
levels=c('< 1000m / semaine',
'Entre 1000m et 2000m / semaine',
'> 2000m / semaine'))
data_cat$kilometres_practice_trail_phase_preparation = ordered(data_cat$kilometres_practice_trail_phase_preparation,
levels=c('< 20km / semaine',
'Entre 20km et 50km / semaine',
'Entre 50km et 80km / semaine',
'> 80km / semaine'))
data_cat$number_hours_training_trail_phase_preparation = ordered(data_cat$number_hours_training_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
data_cat$trail_participation_last_two_seasons <- ordered(data_cat$trail_participation_last_two_seasons,
levels = c("Oui", "Non"))
data_cat$distance_trail_participation_last_two_seasons=ordered(data_cat$distance_trail_participation_last_two_seasons,
levels=c("< 40km", "De 40km à 80km", "> 80km"))
data_cat$frequence_trail_participation_last_two_seasons_by_season=ordered(data_cat$frequence_trail_participation_last_two_seasons_by_season,
levels=c("1 à 3 courses / saison",
"4 à 8 courses / saison",
"> 8 courses / saison"))
data_cat$which_races_UT4M_2023 <- ordered(data_cat$which_races_UT4M_2023,
levels = c("Un des 20km", "Un des 40km",
"80km Challenge","100km Master",
"160km Xtrem / 160km Challenge"))
data_cat$diet <- ordered(data_cat$diet,
levels = c("Oui", "Non"))
data_cat$volume_drink_during_training <- ordered(data_cat$volume_drink_during_training,
levels = c("< 250mL / heure",
"Entre 250mL et 500mL / heure",
"> 500mL / heure"))
data_cat$volume_drink_during_competition <- ordered(data_cat$volume_drink_during_competition,
levels = c("< 250mL / heure",
"Entre 250mL et 500mL / heure",
"> 500mL / heure"))
data_cat$frequence_hours_eat_during_training <- ordered(data_cat$frequence_hours_eat_during_training,
levels = c("< 1x / heure",
"1x ou 2x / heure",
"> 2x / heure"))
data_cat$frequence_hours_eat_during_competition <- ordered(data_cat$frequence_hours_eat_during_competition,
levels = c("< 1x / heure",
"1x ou 2x / heure",
"> 2x / heure"))
data_cat$trail_injury_illness <- ordered(data_cat$trail_injury_illness,
levels = c("Oui","Non"))
data_cat$trail_health_problem_involve_no_training <- ordered(data_cat$trail_health_problem_involve_no_training,
levels = c("Oui","Non"))
data_cat$time_trail_health_problem_involve_no_training <- ordered(data_cat$time_trail_health_problem_involve_no_training,
levels = c("< 2 semaines",
"2 à 4 semaines",
"5 à 8 semaines",
"> 8 semaines"))
data_cat$frequence_medical_apointment_trail <- ordered(data_cat$frequence_medical_apointment_trail,
levels = c("< 2x / an",
"2x à 6x / an",
"> 6x / an"))
data_cat$smoke <- ordered(data_cat$smoke,
levels = c("Oui","Non"))
# Définition du dataframe pour le tableau par course
vec_choix = c("Un des 20km","Un des 40km","80km Challenge","100km Master","160km Xtrem / 160km Challenge")
vec_nom_colonne = c("race_20","race_40", "race_80", "race_100", "race_160")
colonne = data$which_races_UT4M_2023
dataRACE = choix_multiples(data, vec_choix, vec_nom_colonne, colonne)
dataRACE = cbind(data,dataRACE)
dataRACE = dataRACE %>% select(!which_races_UT4M_2023)
dataRACE_20 = dataRACE %>% select(!c(race_40,race_80,race_100,race_160))
dataRACE_20$race_20 <- ifelse(dataRACE_20$race_20 == 0,"Un des 20km",NA)
dataRACE_20 = dataRACE_20 %>% filter(!is.na(race_20))
dataRACE_20 = rename(dataRACE_20,"race" = "race_20")
dataRACE_40 = dataRACE %>% select(!c(race_20,race_80,race_100,race_160))
dataRACE_40$race_40 <- ifelse(dataRACE_40$race_40 == 0,"Un des 40km",NA)
dataRACE_40 = dataRACE_40 %>% filter(!is.na(race_40))
dataRACE_40 = rename(dataRACE_40,"race" = "race_40")
dataRACE_80 = dataRACE %>% select(!c(race_20,race_40,race_100,race_160))
dataRACE_80$race_80 <- ifelse(dataRACE_80$race_80 == 0,"80km Challenge",NA)
dataRACE_80 = dataRACE_80 %>% filter(!is.na(race_80))
dataRACE_80 = rename(dataRACE_80,"race" = "race_80")
dataRACE_100 = dataRACE %>% select(!c(race_20,race_40,race_80,race_160))
dataRACE_100$race_100 <- ifelse(dataRACE_100$race_100 == 0,"100km Master",NA)
dataRACE_100 = dataRACE_100 %>% filter(!is.na(race_100))
dataRACE_100 = rename(dataRACE_100,"race" = "race_100")
dataRACE_160 = dataRACE %>% select(!c(race_20,race_40,race_80,race_100))
dataRACE_160$race_160 <- ifelse(dataRACE_160$race_160 == 0,"160km Xtrem / 160km Challenge",NA)
dataRACE_160=dataRACE_160%>%filter(!is.na(race_160))
dataRACE_160=rename(dataRACE_160,"race"="race_160")
dataRACE = rbind(dataRACE_20,dataRACE_40,dataRACE_80,dataRACE_100,dataRACE_160)
dataRACE_cat <- dataRACE[,-c(2:5,14,32:51)]
dataRACE_cont <- dataRACE[,c(2:5,14,32:51)]
for(ncol in 1:length(dataRACE_cat)){
dataRACE_cat[[ncol]] <- as.factor(dataRACE_cat[[ncol]])
}
dataRACE_cat$weekly_volume_profession <- ordered(dataRACE_cat$weekly_volume_profession,
levels = c("⩽ 35 heures / semaine" ,
"entre 36 et 45 heures / semaine",
"⩾ 45h / semaine" ))
dataRACE_cat$start_trail <- ordered(dataRACE_cat$start_trail,
levels = c("< 2 ans" , "Entre 2 et 5 ans",
"Entre 5 et 10 ans", "> 10 ans"))
dataRACE_cat$time_proportion_other_practice <- ordered(dataRACE_cat$time_proportion_other_practice,
levels = c("< 20%", "Entre 20% et 50%",
"> 50%"))
dataRACE_cat$coach_for_trail <- ordered(dataRACE_cat$coach_for_trail,
levels = c("Oui", "Non"))
dataRACE_cat$heart_rate_monitor_train <- ordered(dataRACE_cat$heart_rate_monitor_train,
levels = c("Oui", "Non"))
dataRACE_cat$heart_rate_monitor_competition <- ordered(dataRACE_cat$heart_rate_monitor_competition,
levels = c("Oui", "Non"))
dataRACE_cat$connected_platform <- ordered(dataRACE_cat$connected_platform,
levels = c("Oui", "Non"))
dataRACE_cat$ITRA_rating_know <- ordered(dataRACE_cat$ITRA_rating_know,
levels = c("Oui", "Non"))
dataRACE_cat$number_hours_practice_trail_phase_preparation = ordered(dataRACE_cat$number_hours_practice_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
dataRACE_cat$drop_practice_trail_phase_preparation = ordered(dataRACE_cat$drop_practice_trail_phase_preparation,
levels=c('< 1000m / semaine',
'Entre 1000m et 2000m / semaine',
'> 2000m / semaine'))
dataRACE_cat$kilometres_practice_trail_phase_preparation = ordered(dataRACE_cat$kilometres_practice_trail_phase_preparation,
levels=c('< 20km / semaine',
'Entre 20km et 50km / semaine',
'Entre 50km et 80km / semaine',
'> 80km / semaine'))
dataRACE_cat$number_hours_training_trail_phase_preparation = ordered(dataRACE_cat$number_hours_training_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
dataRACE_cat$trail_participation_last_two_seasons <- ordered(dataRACE_cat$trail_participation_last_two_seasons,
levels = c("Oui", "Non"))
dataRACE_cat$distance_trail_participation_last_two_seasons=ordered(dataRACE_cat$distance_trail_participation_last_two_seasons,
levels=c("< 40km", "De 40km à 80km", "> 80km"))
dataRACE_cat$frequence_trail_participation_last_two_seasons_by_season=ordered(dataRACE_cat$frequence_trail_participation_last_two_seasons_by_season,
levels=c("1 à 3 courses / saison",
"4 à 8 courses / saison",
"> 8 courses / saison"))
dataRACE_cat$which_races_UT4M_2023 <- ordered(dataRACE_cat$which_races_UT4M_2023,
levels = c("Un des 20km", "Un des 40km",
"80km Challenge","100km Master",
"160km Xtrem / 160km Challenge"))
dataRACE_cat$diet <- ordered(dataRACE_cat$diet,
levels = c("Oui", "Non"))
dataRACE_cat$race <- ordered(dataRACE_cat$race,
levels = c("Un des 20km", "Un des 40km",
"80km Challenge","100km Master",
"160km Xtrem / 160km Challenge"))
dataRACE_cat$diet <- ordered(dataRACE_cat$diet,
levels = c("Oui", "Non"))
dataRACE_cat$volume_drink_during_training <- ordered(dataRACE_cat$volume_drink_during_training,
levels = c("< 250mL / heure",
"Entre 250mL et 500mL / heure",
"> 500mL / heure"))
dataRACE_cat$volume_drink_during_competition <- ordered(dataRACE_cat$volume_drink_during_competition,
levels = c("< 250mL / heure",
"Entre 250mL et 500mL / heure",
"> 500mL / heure"))
dataRACE_cat$frequence_hours_eat_during_training <- ordered(dataRACE_cat$frequence_hours_eat_during_training,
levels = c("< 1x / heure",
"1x ou 2x / heure",
"> 2x / heure"))
dataRACE_cat$frequence_hours_eat_during_competition <- ordered(dataRACE_cat$frequence_hours_eat_during_competition,
levels = c("< 1x / heure",
"1x ou 2x / heure",
"> 2x / heure"))
dataRACE_cat$trail_injury_illness <- ordered(dataRACE_cat$trail_injury_illness,
levels = c("Oui","Non"))
dataRACE_cat$trail_health_problem_involve_no_training <- ordered(dataRACE_cat$trail_health_problem_involve_no_training,
levels = c("Oui","Non"))
dataRACE_cat$time_trail_health_problem_involve_no_training <- ordered(dataRACE_cat$time_trail_health_problem_involve_no_training,
levels = c("< 2 semaines",
"2 à 4 semaines",
"5 à 8 semaines",
"> 8 semaines"))
dataRACE_cat$frequence_medical_apointment_trail <- ordered(dataRACE_cat$frequence_medical_apointment_trail,
levels = c("< 2x / an",
"2x à 6x / an",
"> 6x / an"))
dataRACE_cat$smoke <- ordered(dataRACE_cat$smoke,
levels = c("Oui","Non"))
c(1:length(data))
c(1:length(data))-c(2:5,14,33:52
)
1:length(data)[c(2:5,14,33:52]
1:length(data)[-c(2:5,14,33:52]
(1:length(data))[-c(2:5,14,33:52]
c(1:length(data))[-c(2:5,14,33:52]
c(1:length(data))
1:length(data)
1:length(data)[1]
1:length(data)[,1]
1:length(data)[1,]
seq(from = 1, to = length(data), by = 1)
seq(from = 1, to = length(data), by = 1)[1]
seq(from = 1, to = length(data), by = 1)[-c(2:5,14,33:52)]
# Redéfinition des types de données
for(ncol in seq(from = 1, to = length(data), by = 1)[-c(2:5,14,33:52)]){
data[[ncol]] <- as.factor(data[[ncol]])
}
data$weekly_volume_profession
data$weekly_volume_profession
df <- read_excel("~/Documents/GitHub/UT4M_psycho/Data/dataset_V5.xlsx")
# Fonction pour séparer les choix multiples
choix_multiples = function(data, choix, nom_colonne, colonne){
matrice = matrix(nrow = dim(data)[1],ncol = length(choix))
df = as.data.frame(matrice)
for (j in 1 :length(choix)){
vecteur = c()
for (i in 1 : length(colonne)){
if(is.na(colonne[i])==FALSE){
if(str_detect(colonne[i],choix[j])==TRUE){
vecteur = c(vecteur,0)
}
else{ vecteur = c(vecteur,1)}
}
else{vecteur = c(vecteur,1)}
}
df[j]=vecteur
}
colnames(df) = nom_colonne
return(df)
}
# Suppression du numéro de dossier, de la taille,colonnes à choix multiples
data = df[-c(1,7,10,11,28,29,31,33,35,38,39,43,44)]
# Suppression des dernières colonnes
data = data[-c(53:58)]
# Redéfinition des types de données
for(ncol in seq(from = 1, to = length(data), by = 1)[-c(2:5,14,33:52)]){
data[[ncol]] <- as.factor(data[[ncol]])
}
# Réordonnancement des levels
data$weekly_volume_profession <- ordered(data$weekly_volume_profession,
levels = c("⩽ 35 heures / semaine" ,
"entre 36 et 45 heures / semaine",
"⩾ 45h / semaine" ))
data$start_trail <- ordered(data$start_trail,
levels = c("< 2 ans" , "Entre 2 et 5 ans",
"Entre 5 et 10 ans", "> 10 ans"))
data$time_proportion_other_practice <- ordered(data$time_proportion_other_practice,
levels = c("< 20%", "Entre 20% et 50%",
"> 50%"))
data$coach_for_trail <- ordered(data$coach_for_trail,
levels = c("Oui", "Non"))
data$heart_rate_monitor_train <- ordered(data$heart_rate_monitor_train,
levels = c("Oui", "Non"))
data$heart_rate_monitor_competition <- ordered(data$heart_rate_monitor_competition,
levels = c("Oui", "Non"))
data$connected_platform <- ordered(data$connected_platform,
levels = c("Oui", "Non"))
data$ITRA_rating_know <- ordered(data$ITRA_rating_know,
levels = c("Oui", "Non"))
data$number_hours_practice_trail_phase_preparation = ordered(data$number_hours_practice_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
data$drop_practice_trail_phase_preparation = ordered(data$drop_practice_trail_phase_preparation,
levels=c('< 1000m / semaine',
'Entre 1000m et 2000m / semaine',
'> 2000m / semaine'))
data$kilometres_practice_trail_phase_preparation = ordered(data$kilometres_practice_trail_phase_preparation,
levels=c('< 20km / semaine',
'Entre 20km et 50km / semaine',
'Entre 50km et 80km / semaine',
'> 80km / semaine'))
data$number_hours_training_trail_phase_preparation = ordered(data$number_hours_training_trail_phase_preparation,
levels=c('⩽ 3 heures / semaine',
'Entre 3h et 7h / semaine',
'Entre 7h et 12h / semaine',
'> 12 heures / semaine'))
data$trail_participation_last_two_seasons <- ordered(data$trail_participation_last_two_seasons,
levels = c("Oui", "Non"))
data$distance_trail_participation_last_two_seasons=ordered(data$distance_trail_participation_last_two_seasons,
levels=c("< 40km", "De 40km à 80km", "> 80km"))
data$frequence_trail_participation_last_two_seasons_by_season=ordered(data$frequence_trail_participation_last_two_seasons_by_season,
levels=c("1 à 3 courses / saison",
"4 à 8 courses / saison",
"> 8 courses / saison"))
data$which_races_UT4M_2023 <- ordered(data$which_races_UT4M_2023,
levels = c("Un des 20km", "Un des 40km",
"80km Challenge","100km Master",
"160km Xtrem / 160km Challenge"))
data$diet <- ordered(data$diet,
levels = c("Oui", "Non"))
data$volume_drink_during_training <- ordered(data$volume_drink_during_training,
levels = c("< 250mL / heure",
"Entre 250mL et 500mL / heure",
"> 500mL / heure"))
data$volume_drink_during_competition <- ordered(data$volume_drink_during_competition,
levels = c("< 250mL / heure",
"Entre 250mL et 500mL / heure",
"> 500mL / heure"))
data$frequence_hours_eat_during_training <- ordered(data$frequence_hours_eat_during_training,
levels = c("< 1x / heure",
"1x ou 2x / heure",
"> 2x / heure"))
data$frequence_hours_eat_during_competition <- ordered(data$frequence_hours_eat_during_competition,
levels = c("< 1x / heure",
"1x ou 2x / heure",
"> 2x / heure"))
data$trail_injury_illness <- ordered(data$trail_injury_illness,
levels = c("Oui","Non"))
data$trail_health_problem_involve_no_training <- ordered(data$trail_health_problem_involve_no_training,
levels = c("Oui","Non"))
data$time_trail_health_problem_involve_no_training <- ordered(data$time_trail_health_problem_involve_no_training,
levels = c("< 2 semaines",
"2 à 4 semaines",
"5 à 8 semaines",
"> 8 semaines"))
data$frequence_medical_apointment_trail <- ordered(data$frequence_medical_apointment_trail,
levels = c("< 2x / an",
"2x à 6x / an",
"> 6x / an"))
data$smoke <- ordered(data$smoke,
levels = c("Oui","Non"))
# Séparation des données catégorielles et continues
data_cat <- data[,-c(2:5,14,33:52)]
data_cont <- data[,c(2:5,14,33:52)]
# Définition du dataframe pour le tableau par course
vec_choix = c("Un des 20km","Un des 40km","80km Challenge","100km Master","160km Xtrem / 160km Challenge")
vec_nom_colonne = c("race_20","race_40", "race_80", "race_100", "race_160")
colonne = data$which_races_UT4M_2023
dataRACE = choix_multiples(data, vec_choix, vec_nom_colonne, colonne)
dataRACE = cbind(data,dataRACE)
dataRACE = dataRACE %>% select(!which_races_UT4M_2023)
dataRACE_20 = dataRACE %>% select(!c(race_40,race_80,race_100,race_160))
dataRACE_20$race_20 <- ifelse(dataRACE_20$race_20 == 0,"Un des 20km",NA)
dataRACE_20 = dataRACE_20 %>% filter(!is.na(race_20))
dataRACE_20 = rename(dataRACE_20,"race" = "race_20")
dataRACE_40 = dataRACE %>% select(!c(race_20,race_80,race_100,race_160))
dataRACE_40$race_40 <- ifelse(dataRACE_40$race_40 == 0,"Un des 40km",NA)
dataRACE_40 = dataRACE_40 %>% filter(!is.na(race_40))
dataRACE_40 = rename(dataRACE_40,"race" = "race_40")
dataRACE_80 = dataRACE %>% select(!c(race_20,race_40,race_100,race_160))
dataRACE_80$race_80 <- ifelse(dataRACE_80$race_80 == 0,"80km Challenge",NA)
dataRACE_80 = dataRACE_80 %>% filter(!is.na(race_80))
dataRACE_80 = rename(dataRACE_80,"race" = "race_80")
dataRACE_100 = dataRACE %>% select(!c(race_20,race_40,race_80,race_160))
dataRACE_100$race_100 <- ifelse(dataRACE_100$race_100 == 0,"100km Master",NA)
dataRACE_100 = dataRACE_100 %>% filter(!is.na(race_100))
dataRACE_100 = rename(dataRACE_100,"race" = "race_100")
dataRACE_160 = dataRACE %>% select(!c(race_20,race_40,race_80,race_100))
dataRACE_160$race_160 <- ifelse(dataRACE_160$race_160 == 0,"160km Xtrem / 160km Challenge",NA)
dataRACE_160=dataRACE_160%>%filter(!is.na(race_160))
dataRACE_160=rename(dataRACE_160,"race"="race_160")
dataRACE = rbind(dataRACE_20,dataRACE_40,dataRACE_80,dataRACE_100,dataRACE_160)
View(dataRACE)
View(dataRACE$race)
dataRACE$race
dataRACE_cat <- dataRACE[,-c(2:5,14,32:51)]
dataRACE_cont <- dataRACE[,c(2:5,14,32:51)]
dataRACE_cat
# Définition du dataframe pour le tableau par côte ITRA
ITRA_rating = as.factor(ifelse(data_cont$ITRA_rating <= 500, "ITRA < ou = à 500", "ITRA > à 500"))
dataITRA_cat <- data.frame(data_cat,ITRA_rating)
dataITRA_cont <- data_cont[,-which(colnames(data_cont) == "ITRA_rating")]
# Fonctions pour exécuter le test du khi-deux
independance <- function(colonne1,colonne2,nom_colonne2){
tab_contingence <- t(table(colonne1,colonne2))
test_khi_deux <- chisq.test(tab_contingence)
res_tab_contingence <- rep(" ",dim(tab_contingence)[1])
for(i in dim(tab_contingence)[2]:1){
res_tab_contingence <- cbind.data.frame(tab_contingence[,i],res_tab_contingence)
}
p.valeur <- c(rep(" ",dim(tab_contingence)[2]),format(test_khi_deux$p.value,scientific=TRUE,digits=3))
result <- cbind.data.frame(c(nom_colonne2,levels(colonne2)),rbind.data.frame(p.valeur,res_tab_contingence))
colnames(result) <- c(" ",levels(colonne1),"p-valeur")
rownames(result) <- c()
return(result)
}
tableau_independance <- function(data_cat,nom_colonne){
by = data_cat[[nom_colonne]]
data2 <- data_cat[,-which(colnames(data_cat) == nom_colonne)]
tab <- data.frame()
for(i in 1:dim(data2)[2]){
tab <- rbind.data.frame(tab,independance(by,data2[[i]],colnames(data2[i])))
}
return(tab)
}
# Fonctions pour exécuter le test de Student
comparaison_moyennes <- function(colonne1,colonne2,nom_colonne2){
test_student <- t.test(colonne2~colonne1,var.equal=TRUE)
result <- cbind.data.frame(nom_colonne2,round(t(test_student$estimate),2),format(test_student$p.value,scientific=TRUE,digits=3))
colnames(result) <- c(" ",paste0("moyenne ",levels(colonne1)),"p-valeur")
rownames(result) <- c()
return(result)
}
tableau_comparaison_moyennes <- function(data_cat,data_cont,nom_colonne){
by = data_cat[[nom_colonne]]
tab <- data.frame()
for(i in 1:dim(data_cont)[2]){
tab <- rbind.data.frame(tab,comparaison_moyennes(by,data_cont[[i]],colnames(data_cont[i])))
}
return(tab)
}
# Tableaux par sexe
independance_by_sex <- tableau_independance(data_cat,"sex")
View(independance_by_sex)
# Tableaux par course
independance_by_rate <- tableau_independance(dataRACE_cat,"race")
View(independance_by_rate)
dataRACE$race
levels(dataRACE$race)
dataRACE$race <- as.factor(dataRACE$race)
levels(dataRACE$race)
help(anova_test)
??anova_test
